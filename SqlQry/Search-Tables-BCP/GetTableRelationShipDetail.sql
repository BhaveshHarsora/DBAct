SELECT
	PKTableInfo.TABLE_NAME AS PK_Table_Name
	, ConstarintReference.UNIQUE_CONSTRAINT_NAME AS PK_CONSTRAINT_NAME
	, STUFF( (
				SELECT
					',' + kcu.COLUMN_NAME
				FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE  AS kcu
				WHERE kcu.TABLE_CATALOG = PKTableInfo.TABLE_CATALOG
					AND kcu.TABLE_SCHEMA = PKTableInfo.TABLE_SCHEMA
					AND kcu.TABLE_NAME = PKTableInfo.TABLE_NAME
					AND kcu.CONSTRAINT_CATALOG = PKTableInfo.CONSTRAINT_CATALOG
					AND kcu.CONSTRAINT_SCHEMA = PKTableInfo.CONSTRAINT_SCHEMA
					AND kcu.CONSTRAINT_NAME = PKTableInfo.CONSTRAINT_NAME
				ORDER BY kcu.ORDINAL_POSITION
				FOR XML PATH('')
			), 1, 1, '') AS [PK_CONSTRAINT_COLUMNS]
	, FKTableInfo.TABLE_NAME AS FK_Table_Name
	, ConstarintReference.CONSTRAINT_NAME AS FK_CONSTRAINT_NAME
	, STUFF( (
				SELECT
					',' + kcu.COLUMN_NAME
				FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE  AS kcu
				WHERE kcu.TABLE_CATALOG = FKTableInfo.TABLE_CATALOG
					AND kcu.TABLE_SCHEMA = FKTableInfo.TABLE_SCHEMA
					AND kcu.TABLE_NAME = FKTableInfo.TABLE_NAME
					AND kcu.CONSTRAINT_CATALOG = FKTableInfo.CONSTRAINT_CATALOG
					AND kcu.CONSTRAINT_SCHEMA = FKTableInfo.CONSTRAINT_SCHEMA
					AND kcu.CONSTRAINT_NAME = FKTableInfo.CONSTRAINT_NAME
				ORDER BY kcu.ORDINAL_POSITION
				FOR XML PATH('')
			), 1, 1, '') AS [FK_CONSTRAINT_COLUMNS]
FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS  AS ConstarintReference
	INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS PKTableInfo ON PKTableInfo.CONSTRAINT_CATALOG = ConstarintReference.UNIQUE_CONSTRAINT_CATALOG
		AND PKTableInfo.CONSTRAINT_SCHEMA = ConstarintReference.UNIQUE_CONSTRAINT_SCHEMA
		AND PKTableInfo.CONSTRAINT_NAME = ConstarintReference.UNIQUE_CONSTRAINT_NAME
	INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS FKTableInfo ON ConstarintReference.CONSTRAINT_CATALOG = FKTableInfo.CONSTRAINT_CATALOG
		AND ConstarintReference.CONSTRAINT_SCHEMA = FKTableInfo.CONSTRAINT_SCHEMA
		AND ConstarintReference.CONSTRAINT_NAME = FKTableInfo.CONSTRAINT_NAME
ORDER BY PK_Table_Name, FK_Table_Name
GO
